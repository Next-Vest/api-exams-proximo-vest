
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ExamBoardScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  name: 'name'
};

exports.Prisma.ExamEditionScalarFieldEnum = {
  id: 'id',
  examBoardId: 'examBoardId',
  year: 'year',
  editionLabel: 'editionLabel',
  notes: 'notes'
};

exports.Prisma.ExamPhaseScalarFieldEnum = {
  id: 'id',
  examEditionId: 'examEditionId',
  phaseNumber: 'phaseNumber',
  dayNumber: 'dayNumber',
  subjectBlock: 'subjectBlock',
  questionCountExpected: 'questionCountExpected',
  defaultOptionCount: 'defaultOptionCount',
  isDiscursive: 'isDiscursive'
};

exports.Prisma.SubjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  code: 'code',
  label: 'label'
};

exports.Prisma.StimulusScalarFieldEnum = {
  id: 'id',
  contentHtml: 'contentHtml',
  contentText: 'contentText',
  sourceRef: 'sourceRef'
};

exports.Prisma.StimulusAssetScalarFieldEnum = {
  id: 'id',
  stimulusId: 'stimulusId',
  storageKey: 'storageKey',
  caption: 'caption',
  pageHint: 'pageHint'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  examPhaseId: 'examPhaseId',
  stimulusId: 'stimulusId',
  numberLabel: 'numberLabel',
  isDiscursive: 'isDiscursive',
  difficulty: 'difficulty',
  status: 'status',
  sourcePageStart: 'sourcePageStart',
  sourcePageEnd: 'sourcePageEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuestionSubjectScalarFieldEnum = {
  questionId: 'questionId',
  subjectId: 'subjectId'
};

exports.Prisma.QuestionSkillScalarFieldEnum = {
  questionId: 'questionId',
  skillId: 'skillId'
};

exports.Prisma.McqItemScalarFieldEnum = {
  questionId: 'questionId',
  shuffleOptions: 'shuffleOptions',
  optionCount: 'optionCount',
  correctOptionKey: 'correctOptionKey'
};

exports.Prisma.McqOptionScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  label: 'label',
  textHtml: 'textHtml',
  textPlain: 'textPlain'
};

exports.Prisma.FrItemScalarFieldEnum = {
  questionId: 'questionId',
  answerGuidanceHtml: 'answerGuidanceHtml',
  maxScore: 'maxScore'
};

exports.Prisma.FrAnswerExpectedScalarFieldEnum = {
  id: 'id',
  frItemId: 'frItemId',
  label: 'label',
  answerHtml: 'answerHtml',
  maxScore: 'maxScore'
};

exports.Prisma.FrRubricScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  criterion: 'criterion',
  levelsJson: 'levelsJson'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  resource: 'resource',
  action: 'action',
  key: 'key',
  isActive: 'isActive'
};

exports.Prisma.RolePermissionScalarFieldEnum = {
  roleId: 'roleId',
  permissionId: 'permissionId',
  granted: 'granted'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  userId: 'userId',
  roleId: 'roleId'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  userId: 'userId',
  permissionId: 'permissionId',
  granted: 'granted'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.OptionKey = exports.$Enums.OptionKey = {
  A: 'A',
  B: 'B',
  C: 'C',
  D: 'D',
  E: 'E'
};

exports.QuestionStatus = exports.$Enums.QuestionStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED'
};

exports.Difficulty = exports.$Enums.Difficulty = {
  VERY_EASY: 'VERY_EASY',
  EASY: 'EASY',
  MEDIUM: 'MEDIUM',
  HARD: 'HARD',
  VERY_HARD: 'VERY_HARD'
};

exports.Prisma.ModelName = {
  ExamBoard: 'ExamBoard',
  ExamEdition: 'ExamEdition',
  ExamPhase: 'ExamPhase',
  Subject: 'Subject',
  Skill: 'Skill',
  Stimulus: 'Stimulus',
  StimulusAsset: 'StimulusAsset',
  Question: 'Question',
  QuestionSubject: 'QuestionSubject',
  QuestionSkill: 'QuestionSkill',
  McqItem: 'McqItem',
  McqOption: 'McqOption',
  FrItem: 'FrItem',
  FrAnswerExpected: 'FrAnswerExpected',
  FrRubric: 'FrRubric',
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Role: 'Role',
  Permission: 'Permission',
  RolePermission: 'RolePermission',
  UserRole: 'UserRole',
  UserPermission: 'UserPermission'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "A:\\next-vest\\code\\api-exams-proximo-vest\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "A:\\next-vest\\code\\api-exams-proximo-vest\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ========== Enums ==========\n\nenum OptionKey {\n  A\n  B\n  C\n  D\n  E\n}\n\nenum QuestionStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n}\n\nenum Difficulty {\n  VERY_EASY\n  EASY\n  MEDIUM\n  HARD\n  VERY_HARD\n}\n\n// ========== Catálogo (Board → Edition → Phase) ==========\n\nmodel ExamBoard {\n  id   Int    @id @default(autoincrement())\n  slug String @unique // \"enem\" | \"unicamp\" | \"fuvest\" | ...\n  name String\n\n  editions ExamEdition[]\n\n  @@index([slug])\n}\n\nmodel ExamEdition {\n  id           Int     @id @default(autoincrement())\n  examBoardId  Int\n  year         Int\n  editionLabel String // ex.: \"2025\", \"2024 D1\", \"1º Sem/2026\"\n  notes        String?\n\n  board  ExamBoard   @relation(fields: [examBoardId], references: [id], onDelete: Cascade)\n  phases ExamPhase[]\n\n  @@unique([examBoardId, year, editionLabel])\n  @@index([examBoardId, year])\n}\n\nmodel ExamPhase {\n  id                    Int     @id @default(autoincrement())\n  examEditionId         Int\n  phaseNumber           Int // 1, 2, ...\n  dayNumber             Int? // dia 1, dia 2... (quando aplicável)\n  subjectBlock          String? // \"Conhecimentos Gerais\", etc.\n  questionCountExpected Int?\n  defaultOptionCount    Int? // 4 ou 5 (padrão para MCQ; validação via app)\n  isDiscursive          Boolean @default(false)\n\n  edition   ExamEdition @relation(fields: [examEditionId], references: [id], onDelete: Cascade)\n  questions Question[]\n\n  @@unique([examEditionId, phaseNumber, dayNumber])\n  @@index([examEditionId])\n}\n\n// ========== Matriz Curricular ==========\n\nmodel Subject {\n  id   Int    @id @default(autoincrement())\n  name String\n  slug String @unique\n\n  questions QuestionSubject[]\n\n  @@index([slug])\n}\n\nmodel Skill {\n  id    Int     @id @default(autoincrement())\n  code  String? @unique\n  label String\n\n  questions QuestionSkill[]\n}\n\n// ========== Estímulos (textos/figuras) ==========\n\nmodel Stimulus {\n  id          Int     @id @default(autoincrement())\n  contentHtml String? // rich text (HTML)\n  contentText String? // versão plain p/ busca\n  sourceRef   String? // legenda/ref curta\n\n  assets    StimulusAsset[]\n  questions Question[]\n}\n\nmodel StimulusAsset {\n  id         Int     @id @default(autoincrement())\n  stimulusId Int\n  storageKey String // ex.: s3://... ou /cdn/...\n  caption    String?\n  pageHint   Int?\n\n  stimulus Stimulus @relation(fields: [stimulusId], references: [id], onDelete: Cascade)\n\n  @@index([stimulusId])\n}\n\n// ========== Questões ==========\n\nmodel Question {\n  id              Int            @id @default(autoincrement())\n  examPhaseId     Int\n  stimulusId      Int?\n  numberLabel     String // \"1\", \"23\", \"Q.17\"...\n  isDiscursive    Boolean        @default(false)\n  difficulty      Difficulty?\n  status          QuestionStatus @default(DRAFT)\n  sourcePageStart Int?\n  sourcePageEnd   Int?\n\n  // timestamps (úteis pra auditoria; opcionais)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  phase    ExamPhase @relation(fields: [examPhaseId], references: [id], onDelete: Cascade)\n  stimulus Stimulus? @relation(fields: [stimulusId], references: [id], onDelete: SetNull)\n\n  // vínculos\n  subjects QuestionSubject[]\n  skills   QuestionSkill[]\n\n  // tipo (1–1 exclusivo)\n  mcq McqItem?\n  fr  FrItem?\n\n  // numeração única dentro da fase\n  @@unique([examPhaseId, numberLabel])\n  @@index([examPhaseId])\n}\n\nmodel QuestionSubject {\n  questionId Int\n  subjectId  Int\n\n  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)\n  subject  Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)\n\n  @@id([questionId, subjectId])\n  @@index([subjectId])\n}\n\nmodel QuestionSkill {\n  questionId Int\n  skillId    Int\n\n  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)\n  skill    Skill    @relation(fields: [skillId], references: [id], onDelete: Cascade)\n\n  @@id([questionId, skillId])\n  @@index([skillId])\n}\n\n// ========== Múltipla Escolha (MCQ) ==========\n\nmodel McqItem {\n  questionId       Int       @id\n  shuffleOptions   Boolean   @default(true)\n  optionCount      Int // 4 ou 5 (valide no app)\n  correctOptionKey OptionKey // gabarito único (sem variação por caderno)\n\n  question Question    @relation(fields: [questionId], references: [id], onDelete: Cascade)\n  options  McqOption[]\n}\n\nmodel McqOption {\n  id         Int       @id @default(autoincrement())\n  questionId Int\n  label      OptionKey // A..E\n  textHtml   String?\n  textPlain  String?\n\n  mcq McqItem @relation(fields: [questionId], references: [questionId], onDelete: Cascade)\n\n  @@unique([questionId, label])\n  @@index([questionId])\n}\n\n// ========== Discursiva (Free Response) ==========\n\nmodel FrItem {\n  questionId         Int      @id\n  answerGuidanceHtml String? // orientação geral ao avaliador\n  maxScore           Decimal? // nota máxima (ex.: 4.0, 10.0)\n\n  question        Question           @relation(fields: [questionId], references: [id], onDelete: Cascade)\n  rubrics         FrRubric[] // critérios/níveis (opcional)\n  expectedAnswers FrAnswerExpected[] // respostas esperadas por subitem (a/b/c...)\n}\n\n// Subitens de resposta esperada (a/b/c...) com texto oficial e pontuação parcial\n\nmodel FrAnswerExpected {\n  id         Int      @id @default(autoincrement())\n  frItemId   Int\n  label      String? // \"a)\", \"b)\", \"c)\"...\n  answerHtml String? // resposta esperada/desenvolvimento\n  maxScore   Decimal? // pontuação do subitem (soma pode = maxScore da questão)\n\n  frItem FrItem @relation(fields: [frItemId], references: [questionId], onDelete: Cascade)\n\n  @@index([frItemId])\n}\n\nmodel FrRubric {\n  id         Int    @id @default(autoincrement())\n  questionId Int\n  criterion  String\n  levelsJson Json // níveis/descritores (estrutura livre)\n\n  fr FrItem @relation(fields: [questionId], references: [questionId], onDelete: Cascade)\n\n  @@index([questionId])\n}\n\nmodel User {\n  id            String    @id\n  name          String\n  email         String\n  emailVerified Boolean   @default(false)\n  image         String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @default(now()) @updatedAt\n  sessions      Session[]\n  accounts      Account[]\n\n  role       String?\n  banned     Boolean?  @default(false)\n  banReason  String?\n  banExpires DateTime?\n\n  roles       UserRole[]\n  directPerms UserPermission[]\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  impersonatedBy String?\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  @@map(\"verification\")\n}\n\nmodel Role {\n  id          String  @id @default(cuid())\n  name        String  @unique // \"admin\", \"editor\"\n  description String?\n  // opcional: guard para escopo/tenant\n  isActive    Boolean @default(true)\n\n  users UserRole[]\n  perms RolePermission[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Permission {\n  id       String  @id @default(cuid())\n  resource String // \"exam\"\n  action   String // \"publish\"\n  // chave canônica opcional\n  key      String  @unique // \"exam.publish\"\n  // opcional: escopo/tenant\n  isActive Boolean @default(true)\n\n  roles RolePermission[]\n  users UserPermission[]\n\n  @@index([resource, action])\n}\n\nmodel RolePermission {\n  roleId       String\n  permissionId String\n  granted      Boolean @default(true)\n\n  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n\n  @@id([roleId, permissionId])\n}\n\nmodel UserRole {\n  userId String\n  roleId String\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@id([userId, roleId])\n  @@index([roleId])\n}\n\nmodel UserPermission {\n  userId       String\n  permissionId String\n  granted      Boolean @default(true)\n\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n\n  @@id([userId, permissionId])\n}\n",
  "inlineSchemaHash": "c5640c5454c6e015d389c025a45954dfd02f5cbe8976ada1482e91a7ad84a057",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ExamBoard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"editions\",\"kind\":\"object\",\"type\":\"ExamEdition\",\"relationName\":\"ExamBoardToExamEdition\"}],\"dbName\":null},\"ExamEdition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"examBoardId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"editionLabel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"board\",\"kind\":\"object\",\"type\":\"ExamBoard\",\"relationName\":\"ExamBoardToExamEdition\"},{\"name\":\"phases\",\"kind\":\"object\",\"type\":\"ExamPhase\",\"relationName\":\"ExamEditionToExamPhase\"}],\"dbName\":null},\"ExamPhase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"examEditionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"phaseNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dayNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subjectBlock\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionCountExpected\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultOptionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDiscursive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"edition\",\"kind\":\"object\",\"type\":\"ExamEdition\",\"relationName\":\"ExamEditionToExamPhase\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"ExamPhaseToQuestion\"}],\"dbName\":null},\"Subject\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"QuestionSubject\",\"relationName\":\"QuestionSubjectToSubject\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"QuestionSkill\",\"relationName\":\"QuestionSkillToSkill\"}],\"dbName\":null},\"Stimulus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contentHtml\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assets\",\"kind\":\"object\",\"type\":\"StimulusAsset\",\"relationName\":\"StimulusToStimulusAsset\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToStimulus\"}],\"dbName\":null},\"StimulusAsset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stimulusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pageHint\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stimulus\",\"kind\":\"object\",\"type\":\"Stimulus\",\"relationName\":\"StimulusToStimulusAsset\"}],\"dbName\":null},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"examPhaseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stimulusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"numberLabel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDiscursive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"difficulty\",\"kind\":\"enum\",\"type\":\"Difficulty\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"QuestionStatus\"},{\"name\":\"sourcePageStart\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sourcePageEnd\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phase\",\"kind\":\"object\",\"type\":\"ExamPhase\",\"relationName\":\"ExamPhaseToQuestion\"},{\"name\":\"stimulus\",\"kind\":\"object\",\"type\":\"Stimulus\",\"relationName\":\"QuestionToStimulus\"},{\"name\":\"subjects\",\"kind\":\"object\",\"type\":\"QuestionSubject\",\"relationName\":\"QuestionToQuestionSubject\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"QuestionSkill\",\"relationName\":\"QuestionToQuestionSkill\"},{\"name\":\"mcq\",\"kind\":\"object\",\"type\":\"McqItem\",\"relationName\":\"McqItemToQuestion\"},{\"name\":\"fr\",\"kind\":\"object\",\"type\":\"FrItem\",\"relationName\":\"FrItemToQuestion\"}],\"dbName\":null},\"QuestionSubject\":{\"fields\":[{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subjectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToQuestionSubject\"},{\"name\":\"subject\",\"kind\":\"object\",\"type\":\"Subject\",\"relationName\":\"QuestionSubjectToSubject\"}],\"dbName\":null},\"QuestionSkill\":{\"fields\":[{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToQuestionSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"QuestionSkillToSkill\"}],\"dbName\":null},\"McqItem\":{\"fields\":[{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shuffleOptions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"optionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correctOptionKey\",\"kind\":\"enum\",\"type\":\"OptionKey\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"McqItemToQuestion\"},{\"name\":\"options\",\"kind\":\"object\",\"type\":\"McqOption\",\"relationName\":\"McqItemToMcqOption\"}],\"dbName\":null},\"McqOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"enum\",\"type\":\"OptionKey\"},{\"name\":\"textHtml\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"textPlain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mcq\",\"kind\":\"object\",\"type\":\"McqItem\",\"relationName\":\"McqItemToMcqOption\"}],\"dbName\":null},\"FrItem\":{\"fields\":[{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answerGuidanceHtml\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxScore\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"FrItemToQuestion\"},{\"name\":\"rubrics\",\"kind\":\"object\",\"type\":\"FrRubric\",\"relationName\":\"FrItemToFrRubric\"},{\"name\":\"expectedAnswers\",\"kind\":\"object\",\"type\":\"FrAnswerExpected\",\"relationName\":\"FrAnswerExpectedToFrItem\"}],\"dbName\":null},\"FrAnswerExpected\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"frItemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answerHtml\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxScore\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"frItem\",\"kind\":\"object\",\"type\":\"FrItem\",\"relationName\":\"FrAnswerExpectedToFrItem\"}],\"dbName\":null},\"FrRubric\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"criterion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"levelsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"fr\",\"kind\":\"object\",\"type\":\"FrItem\",\"relationName\":\"FrItemToFrRubric\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"directPerms\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"UserToUserPermission\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"},{\"name\":\"perms\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"RoleToRolePermission\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Permission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"PermissionToRolePermission\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"PermissionToUserPermission\"}],\"dbName\":null},\"RolePermission\":{\"fields\":[{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"granted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToRolePermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"PermissionToRolePermission\"}],\"dbName\":null},\"UserRole\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":null},\"UserPermission\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"granted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"PermissionToUserPermission\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

